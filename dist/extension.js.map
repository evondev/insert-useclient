{"version":3,"file":"extension.js","mappings":"8bAAA,eACA,oBAAyBA,GACvB,MAAMC,EAAU,0BAEhB,IAAIC,EAAaC,EAAOC,SAASC,gBAC/B,oCACA,IAAY,EAAD,gCAET,MAAMC,EAASH,EAAOI,OAAOC,iBAE7B,GAAIF,EAAQ,CACV,MACMG,EADWH,EAAOI,SACFC,UACtB,GAAIV,EAAQW,KAAKH,GAAO,CACtB,MAAMI,EAAQ,IAAIV,EAAOW,MACvB,IAAIX,EAAOY,SAAS,EAAG,GACvB,IAAIZ,EAAOY,SAAS,EAAG,IAQzB,OANAT,EAAOU,MAAMC,IACXA,EAAYC,QAAQL,EAAO,GAAG,SAEhCV,EAAOI,OAAOY,uBACZ,kC,CAIJ,MAAMN,EAAQ,IAAIV,EAAOW,MACvB,IAAIX,EAAOY,SAAS,EAAG,GACvB,IAAIZ,EAAOY,SAAS,EAAG,IAEzBT,EAAOU,MAAMC,IACXA,EAAYC,QAAQL,EAAO,kBAAkB,IAE/CV,EAAOI,OAAOY,uBAAuB,kC,CAEzC,MAGFnB,EAAQoB,cAAcC,KAAKnB,EAC7B,EAGA,wBAA8B,C,UC1C9BoB,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://insert-useclient/./src/extension.ts","webpack://insert-useclient/external commonjs \"vscode\"","webpack://insert-useclient/webpack/bootstrap","webpack://insert-useclient/webpack/startup"],"sourcesContent":["import * as vscode from \"vscode\";\nexport function activate(context: vscode.ExtensionContext) {\n  const pattern = /^['\"]use client['\"];?$/m;\n\n  let disposable = vscode.commands.registerCommand(\n    \"insert-useclient.insertUseClient\",\n    async () => {\n      // insert use client to the top of the current valid javascript file\n      const editor = vscode.window.activeTextEditor;\n\n      if (editor) {\n        const document = editor.document;\n        const text = document.getText();\n        if (pattern.test(text)) {\n          const range = new vscode.Range(\n            new vscode.Position(0, 0),\n            new vscode.Position(1, 0)\n          );\n          editor.edit((editBuilder) => {\n            editBuilder.replace(range, \"\");\n          });\n          vscode.window.showInformationMessage(\n            \"Remove use client successfully!\"\n          );\n          return;\n        }\n        const range = new vscode.Range(\n          new vscode.Position(0, 0),\n          new vscode.Position(0, 0)\n        );\n        editor.edit((editBuilder) => {\n          editBuilder.replace(range, \"'use client';\\n\");\n        });\n        vscode.window.showInformationMessage(\"Insert use client successfully!\");\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["context","pattern","disposable","vscode","commands","registerCommand","editor","window","activeTextEditor","text","document","getText","test","range","Range","Position","edit","editBuilder","replace","showInformationMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}